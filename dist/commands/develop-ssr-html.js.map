{"version":3,"sources":["../../src/commands/develop-ssr-html.js"],"names":["webpack","require","fs","webpackConfig","store","createErrorFromString","debug","module","exports","program","directory","pages","getState","map","page","path","serverConfig","config","resolve","Promise","reject","compiler","run","e","stats","outputFile","output","filename","hasErrors","webpackErrors","compilation","errors","filter","String","requireRenderer","err","clearCache","Object","keys","cache","id"],"mappings":";;AACA,MAAMA,UAAUC,QAAS,SAAT,CAAhB;AACA,MAAMC,KAAKD,QAAS,IAAT,CAAX;AACA,MAAME,gBAAgBF,QAAS,yBAAT,CAAtB;AACA,MAAM,EAAEG,KAAF,KAAYH,QAAS,UAAT,CAAlB;AACA,MAAM,EAAEI,qBAAF,KAA4BJ,QAAS,gCAAT,CAAlC;;AAEA,MAAMK,QAAQL,QAAS,OAAT,EAAkB,aAAlB,CAAd;;AAEAM,OAAOC,OAAP,GAAiB,MAAOC,OAAP,IAAwB;AACvC,QAAM,EAAEC,SAAF,KAAgBD,OAAtB;;AAEAH,QAAO,wBAAP;AACA;AACA,QAAMK,QAAQP,MAAMQ,QAAN,GAAiBD,KAAjB,CAAuBE,GAAvB,CAA2BC,QAAQA,KAAKC,IAAxC,CAAd;;AAEA,QAAMC,eAAe,MAAMb,cACzBM,OADyB,EAEzBC,SAFyB,EAGxB,kBAHwB,EAIzB,IAJyB,EAKzBC,KALyB,CAA3B;;AAQA,QAAMM,SAASD,aAAaE,OAAb,EAAf;;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACD,OAAD,EAAUE,MAAV,KAAqB;AACtC,UAAMC,WAAWrB,QAAQiB,MAAR,CAAjB;AACAI,aAASC,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzB,UAAID,CAAJ,EAAO;AACL,eAAOH,OAAOG,CAAP,CAAP;AACD;AACD,YAAME,aAAc,GAAER,OAAOS,MAAP,CAAcX,IAAK,IAAGE,OAAOS,MAAP,CAAcC,QAAS,EAAnE;AACA,UAAIH,MAAMI,SAAN,EAAJ,EAAuB;AACrB,cAAMC,gBAAgBL,MAAMM,WAAN,CAAkBC,MAAlB,CAAyBC,MAAzB,CAAiCT,CAAD,IAAOA,CAAvC,CAAtB;AACA,eAAOH,OACLf,sBAAsB4B,OAAOJ,cAAc,CAAd,CAAP,CAAtB,EAAiD,GAAEJ,UAAW,MAA9D,CADK,CAAP;AAGD;;AAED,aAAOP,QAAQ;AACbG,gBADa;AAEba,yBAAiB,MAAM,IAAIf,OAAJ,CAAY,CAACD,OAAD,EAAUE,MAAV,KAAqB;AACtD,cAAI;AACFF,oBAAQjB,QAAQwB,UAAR,CAAR;AACD,WAFD,CAEE,OAAOU,GAAP,EAAY;AACZf,mBAAOe,GAAP;AACD;AACF,SANsB,CAFV;AASbC,oBAAY,MAAMC,OAAOC,IAAP,CAAYrC,QAAQsC,KAApB,EACf1B,GADe,CACX2B,MAAM;AACT,cAAIA,OAAOf,UAAX,EAAuB;AACrB,mBAAOxB,QAAQsC,KAAR,CAAcC,EAAd,CAAP;AACD;AACF,SALe;AATL,OAAR,CAAP;AAgBD,KA5BD;AA6BD,GA/BM,CAAP;AAgCD,CAjDD","file":"develop-ssr-html.js","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst fs = require(`fs`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst { store } = require(`../redux`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\n\nconst debug = require(`debug`)(`gatsby:html`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n  // Reduce pages objects to an array of paths.\n  const pages = store.getState().pages.map(page => page.path)\n\n  const serverConfig = await webpackConfig(\n    program,\n    directory,\n    `develop-ssr-html`,\n    null,\n    pages,\n  )\n\n  const config = serverConfig.resolve()\n\n  return new Promise((resolve, reject) => {\n    const compiler = webpack(config)\n    compiler.run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${config.output.path}/${config.output.filename}`\n      if (stats.hasErrors()) {\n        const webpackErrors = stats.compilation.errors.filter((e) => e)\n        return reject(\n          createErrorFromString(String(webpackErrors[0]), `${outputFile}.map`)\n        )\n      }\n\n      return resolve({\n        compiler,\n        requireRenderer: () => new Promise((resolve, reject) => {\n          try {\n            resolve(require(outputFile))\n          } catch (err) {\n            reject(err)\n          }\n        }),\n        clearCache: () => Object.keys(require.cache)\n          .map(id => {\n            if (id === outputFile) {\n              delete require.cache[id]\n            }\n          }),\n      })\n    })\n  })\n}\n"]}