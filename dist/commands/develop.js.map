{"version":3,"sources":["../../src/commands/develop.js"],"names":["chokidar","require","express","graphqlHTTP","parsePath","request","rl","webpack","webpackConfig","bootstrap","store","copyStaticDirectory","developHtml","developSsrHtml","withBasePath","report","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","exit","startServer","program","directory","directoryPath","createIndexHtml","catch","err","name","panic","stripIndent","createSSRHtml","compilerConfig","port","devConfig","resolve","compiler","ssr","watch","aggregateTimeout","clearCache","app","use","log","path","heartbeat","schema","getState","graphiql","static","__dirname","noInfo","quiet","publicPath","proxy","config","prefix","url","req","res","proxiedUrl","originalUrl","pipe","get","next","sendFile","decodeURIComponent","parsedPath","extname","startsWith","status","end","requireRenderer","then","renderer","htmlsString","send","error","server","Server","io","socket","join","listener","listen","host","code","open","address","watchGlobs","map","to","emit","module","exports","detect","parseInt","_port","question","answer","length","match"],"mappings":"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","file":"develop.js","sourcesContent":["/* @flow */\n\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst parsePath = require(`parse-filepath`)\nconst request = require(`request`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store } = require(`../redux`)\nconst copyStaticDirectory = require(`../utils/copy-static-directory`)\nconst developHtml = require(`./develop-html`)\nconst developSsrHtml = require(`./develop-ssr-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfer with the regular\n// bootstrap.\nsetTimeout(() => {\n  copyStaticDirectory()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  process.exit()\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = () =>\n    developHtml(program).catch(err => {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://goo.gl/yL9lND\n        `,\n        err\n      )\n    })\n\n  const createSSRHtml = () =>\n    developSsrHtml(program).catch(err => {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the ssr-html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://goo.gl/yL9lND\n        `,\n        err\n      )\n    })\n\n  // Start bootstrap process.\n  await bootstrap(program)\n\n  await createIndexHtml()\n\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const devConfig = compilerConfig.resolve()\n  const compiler = webpack(devConfig)\n  const ssr = await createSSRHtml()\n  ssr.compiler.watch({ aggregateTimeout: 300 }, err => {\n    if (err) {\n      report.panic(`error while trying to compile ssr render`, err)\n      return\n    }\n    ssr.clearCache()\n  })\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: () => {},\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n  app.use(\n    `/___graphql`,\n    graphqlHTTP({\n      schema: store.getState().schema,\n      graphiql: true,\n    })\n  )\n\n  app.use(express.static(__dirname + `/public`))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      noInfo: true,\n      quiet: true,\n      publicPath: devConfig.output.publicPath,\n    })\n  )\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      req.pipe(request(proxiedUrl)).pipe(res)\n    })\n  }\n\n  // Check if the file exists in the public folder.\n  app.get(`*`, (req, res, next) => {\n    // Load file but ignore errors.\n    res.sendFile(\n      directoryPath(`/public/${decodeURIComponent(req.url)}`),\n      err => {\n        // No err so a file was sent successfully.\n        if (!err || !err.path) {\n          next()\n        } else if (err) {\n          // There was an error. Let's check if the error was because it\n          // couldn't find an HTML file. We ignore these as we want to serve\n          // all HTML from our single empty SSR html file.\n          const parsedPath = parsePath(err.path)\n          if (\n            parsedPath.extname === `` ||\n            parsedPath.extname.startsWith(`.html`)\n          ) {\n            next()\n          } else {\n            res.status(404).end()\n          }\n        }\n      }\n    )\n  })\n\n  app.use((req, res, next) => {\n    ssr.requireRenderer()\n      .then(renderer => renderer({ path: decodeURIComponent(req.path) }))\n      .then(htmlsString => {\n        res.status(200).send(htmlsString).end()\n      })\n      .catch(err => {\n        if (!err || !err.path) {\n          report.error(`found error while trying to ssr: `, err)\n          return next()\n        }\n        const parsedPath = parsePath(err.path)\n        if (\n          parsedPath.extname === `` ||\n          parsedPath.extname.startsWith(`.html`)\n        ) {\n          return next()\n        }\n        return res.status(404).end()\n      })\n  })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    const parsedPath = parsePath(req.originalUrl)\n    if (parsedPath.extname === `` || parsedPath.extname.startsWith(`.html`)) {\n      res.sendFile(directoryPath(`public/index.html`), err => {\n        if (err) {\n          res.status(500).end()\n        }\n      })\n    } else {\n      next()\n    }\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n\n  const server = require(`http`).Server(app)\n  const io = require(`socket.io`)(server)\n\n  io.on(`connection`, socket => {\n    socket.join(`clients`)\n  })\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${program.port} as there's already a process listing on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n\n    if (program.open) {\n      const host =\n        listener.address().address === `127.0.0.1`\n          ? `localhost`\n          : listener.address().address\n      require(`opn`)(`http://${host}:${listener.address().port}`)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    directoryPath(path)\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    io.to(`clients`).emit(`reload`)\n  })\n}\n\nmodule.exports = (program: any) => {\n  const detect = require(`detect-port`)\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  detect(port, (err, _port) => {\n    if (err) {\n      report.panic(err)\n    }\n\n    if (port !== _port) {\n      // eslint-disable-next-line max-len\n      const question = `Something is already running at port ${port} \\nWould you like to run the app at another port instead? [Y/n] `\n\n      return rlInterface.question(question, answer => {\n        if (answer.length === 0 || answer.match(/^yes|y$/i)) {\n          program.port = _port // eslint-disable-line no-param-reassign\n        }\n\n        return startServer(program)\n      })\n    }\n\n    return startServer(program)\n  })\n}\n"]}